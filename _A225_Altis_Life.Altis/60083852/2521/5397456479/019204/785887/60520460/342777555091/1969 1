params[["_target",player],["_caller",player],["_actionID",0],["_useExplosive",false]];private _safe=cursorTarget;if!(playerSide isEqualTo civilian) exitWith{};if((life_fed_robbed param[1,-1800])>(serverTime-(60*60))) exitWith{[2,format["Security is high due to a recent robbery and you cannot open this safe. Try again in %1 minute(s).",ceil(((life_fed_robbed param[1,-1800])-(serverTime-(60*60)))/60)]]call life_fnc_broadcast};if(_useExplosive&&!(43 in life_side_talents)) exitWith{[2,"You are not talented enough to use explosives."]call life_fnc_broadcast};if((life_inv_demoCharge<=0)&&_useExplosive) exitWith{[2,"You need a demolition charge to do this."]call life_fnc_broadcast};if!((vehicle player) isEqualTo player) exitWith{[2,"You cannot do this from within a vehicle."]call life_fnc_broadcast};if(["fed"]call life_fnc_activeFederalEvent) exitWith{["There is already another Federal Event happening.","basic"]spawn life_fnc_handleMessage;};if(!(life_fed_robbed select 0)&&!([5,true]call life_fnc_policeRequired)) exitWith{};if(SRV_lastRobbery>(serverTime-(60*15))) exitWith{[2,format["Security is high due to a recent robbery and you cannot open this safe. Try again in %1 minute(s).",ceil((SRV_lastRobbery-(serverTime-(60*15)))/60)]]call life_fnc_broadcast};private _nearbySafes=(nearestObjects[player,["Land_Research_house_V1_F","Land_Research_HQ_F"],30]);private _safe=if((count _nearbySafes)>=1) then{_nearbySafes select 0}else{objNull};if(isNull _safe||!((typeOf _safe) in["Land_Research_house_V1_F","Land_Research_HQ_F"])) exitWith{[2,"There is no safe nearby."]call life_fnc_broadcast};if((_safe getVariable["ga_vaultlocked",1]) isEqualTo 0) exitWith{[2,"The safe is already unlocked."]call life_fnc_broadcast};private _nearbyVaults=(nearestObjects[player,["Land_Dome_Big_F","Land_Dome_Small_F"],30]);private _vault=if((count _nearbyVaults)>=1) then{_nearbyVaults select 0}else{objNull};if(isNull _vault) exitWith{[2,"There is no vault nearby."]call life_fnc_broadcast};if((_vault getVariable["ga_vaultlocked",1]) isEqualTo 1) exitWith{[2,"The vault needs to be unlocked before breaching the safe."]call life_fnc_broadcast};private _selectionNames=(selectionNames _safe) select{(_x find"door")>=0};private _closestSafeDoor=_selectionNames select 0;{private _distance=player distance(_safe modelToWorld(_safe selectionPosition _x));if((_distance)<(player distance(_safe modelToWorld(_safe selectionPosition _closestSafeDoor)))) then{_closestSafeDoor=_x};}forEach _selectionNames;private _closestSafeDoorPos=(_safe modelToWorld(_safe selectionPosition _closestSafeDoor));if((_useExplosive)&&(life_inv_demoCharge<=0)) exitWith{[2,"You need a demolition charge to do this."]call life_fnc_broadcast};if((player distance _closestSafeDoorPos)>=3) exitWith{[2,"You are not close enough to the safe door."]call life_fnc_broadcast};if(life_action_in_use) exitWith{};life_action_in_use=true;disableSerialization;5 cutRsc["life_progress","PLAIN"];
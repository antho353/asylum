params[["_mode",-1,[0]]];if(_mode isEqualTo-1) exitWith{};disableSerialization;private _bldg=life_pInact_curTarget;if(isNull _bldg) exitWith{};if!(_bldg isKindOf"House_F") exitWith{};if(isNil{_bldg getVariable"ga_homeOwner"}&&!(_bldg in life_vehicles)) exitWith{["You must be the owner of this property to configure key settings.","basic"]spawn life_fnc_handleMessage;closeDialog 0;};if!((_bldg getVariable["ga_homeOwner",""]) isEqualTo(getPlayerUID player)) exitWith{["You must be the owner of this property to configure key settings.","basic"]spawn life_fnc_handleMessage;closeDialog 0;};switch(_mode) do{case 0:{waitUntil{!isNull(findDisplay 37500)};private _display=findDisplay 37500;private _nearPlayers=_display displayCtrl 37501;private _bldgKeyholders=_display displayCtrl 37502;private _rankBox=_display displayCtrl 37503;private _menuDescription=_display displayCtrl 37504;private _menuKeyCapText=_display displayCtrl 37505;private _menuKeyCapButton=_display displayCtrl 37506;private _keyPlayers=[_bldg,"","getKeyHolders"]call life_fnc_keyHolderStatus;private _keyholders=_bldg getVariable["ga_house_keys",[]];private _keyCapCount=_bldg getVariable["ga_keycap",0];private _availableKeys=_keyCapCount-count _keyholders;{lbClear _x}forEach[_nearPlayers,_bldgKeyholders];_menuDescription ctrlSetStructuredText parseText"<t size='0.90' align='center'>Players with a key cannot spawn at or sell the building. You can revoke access by removing individual keys or changing the locks on the building.</t>";_menuKeyCapText ctrlSetStructuredText parseText format["Available Spare Keys: %1",_availableKeys];private _keyCapEnable=if(_keyCapCount>=life_maxHouseKeys) then{false}else{true};private _keyCapText=if(_keyCapEnable) then{"Add Key"}else{"Max Keys"};_menuKeyCapButton ctrlSetText _keyCapText;_menuKeyCapButton ctrlEnable _keyCapEnable;if(_keyCapEnable) then{_menuKeyCapButton buttonSetAction"[4] spawn life_fnc_manageBldgKeys";};{_x params["_perm","_rank"];_rankBox lbAdd format["%1",_perm];_rankBox lbSetData[(lbSize _rankBox)-1,str _rank];}forEach[["Both",1],["Inv",2],["Keys",3]];_rankBox lbSetCurSel 2;{if(!isNull _x&&alive _x&&(side _x isEqualTo civilian)&&player distance _x<20&&_x!=player) then{_nearPlayers lbAdd format["%1",_x getVariable["ga_name",[name _x]call life_fnc_cleanName]];_nearPlayers lbSetData[(lbSize _nearPlayers)-1,str _x];};}forEach((getPos player) nearEntities["CAManBase",15]) select{isPlayer _x&&alive _x};{_x params["_playerUID","_playerRank","_playerName"];_displayRank=switch(_playerRank) do{case(1):{"Both"};case(2):{"Inv"};case(3):{"Keys"};};_bldgKeyholders lbAdd format["%1 - %2 - %3",_playerName,_playerUID,_displayRank];_bldgKeyholders lbSetData[(lbSize _bldgKeyholders)-1,str _x];}forEach _keyholders;};case 1:{private _keyholders=_bldg getVariable["ga_house_keys",[]];private _keyPlayers=[_bldg,"","getKeyHolders"]call life_fnc_keyHolderStatus;private _keyCapCount=_bldg getVariable["ga_keycap",0];if(count _keyPlayers>=_keyCapCount) exitWith{[format["You have reached the limit of %1 key holders for this property.",_keyCapCount],"basic"]spawn life_fnc_handleMessage;};private _dialog=findDisplay 37500;private _nearPlayers=_dialog displayCtrl 37501;private _rankBox=_dialog displayCtrl 37503;private _selectedPlayer=_nearPlayers lbData(lbCurSel _nearPlayers);private _chosenRank=parseNumber(_rankBox lbData(lbCurSel _rankBox));private _selectedPlayer=missionNamespace getVariable _selectedPlayer;if(isNil"_selectedPlayer") exitWith{["Please select a player from the list.","basic"]spawn life_fnc_handleMessage;